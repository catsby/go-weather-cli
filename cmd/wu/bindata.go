// Code generated by go-bindata.
// sources:
// templates/response.tmpl
// templates/si/alerts.tmpl
// templates/si/almanac.tmpl
// templates/si/current_observation.tmpl
// templates/si/forecast.tmpl
// templates/si/history.tmpl
// templates/si/location.tmpl
// templates/si/moon_phase.tmpl
// templates/si/tide.tmpl
// templates/si/trip.tmpl
// templates/us/alerts.tmpl
// templates/us/almanac.tmpl
// templates/us/current_observation.tmpl
// templates/us/forecast.tmpl
// templates/us/history.tmpl
// templates/us/location.tmpl
// templates/us/moon_phase.tmpl
// templates/us/tide.tmpl
// templates/us/trip.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesResponseTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\xca\xc2\x30\x10\x46\xf7\xff\x29\xc2\xec\x7f\xef\x50\x04\x71\xa1\x28\xe2\x05\x62\x3b\xc5\x40\x9b\x84\x64\x14\x24\xe4\xee\x52\xb5\xb6\x5f\xd4\x5d\x79\xef\x7b\xd3\x45\x52\x6a\xb8\x35\x96\x15\x55\xde\x1c\x38\x7a\x67\x23\x93\xfa\xcf\xf9\x2f\x25\xd3\xaa\xc5\xf2\x12\x02\x5b\xd9\x9d\x22\x87\xab\x16\xe3\x6c\xce\x29\x09\xf7\xbe\xd3\xc2\x8a\x3e\x3d\xfd\x8a\xd8\x36\xb3\xc3\x2b\x17\xb8\xd6\x51\xf0\xdc\x48\x09\x07\x98\x56\x1d\x07\x89\x18\x3e\x19\xcd\x65\x19\xf5\xda\xea\xba\xac\x1e\x90\x40\x63\xb7\x36\x51\x5c\xb8\x61\xf7\x82\x04\x1a\xbb\x63\x30\x1e\xa3\x81\xd0\x24\x70\xbe\x75\xce\xee\xcf\x3a\x32\x36\x6f\x4c\xc5\xa4\xf8\x99\x69\x8a\x70\x20\x34\x09\x9c\x6f\x5c\xfd\xe5\x29\x47\x4a\x38\x98\xd2\xf1\xeb\x1e\x00\x00\xff\xff\x62\x8d\xc5\xc4\x35\x02\x00\x00"

func templatesResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesResponseTmpl,
		"templates/response.tmpl",
	)
}

func templatesResponseTmpl() (*asset, error) {
	bytes, err := templatesResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/response.tmpl", size: 565, mode: os.FileMode(436), modTime: time.Unix(1511948529, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiAlertsTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8e\x31\xaa\xc3\x40\x0c\x44\xfb\x3d\x85\xb0\x3a\x83\xed\x33\x7c\xf8\x29\x52\x24\x77\x10\xf6\xc4\x2c\x98\xb5\x59\x6d\x42\x40\xe8\xee\x21\x8a\x3b\x3d\xcd\x30\x3c\xb3\x05\x8f\x5c\x40\xdd\xdf\x86\xda\xb4\xa3\xc1\x3d\x99\x55\x29\x2b\x68\x0c\x62\x66\x32\x1b\xff\xa1\x73\xcd\x47\xcb\x7b\x71\x27\x66\x4e\xe9\xaa\xfa\xc4\x42\xd2\x22\x97\x06\xf7\x74\x79\x1f\xb9\x42\xcf\xe7\x49\xb1\x39\xde\xa0\x2a\x2b\x02\xb0\x29\x62\xfd\xbe\x93\xcc\x2d\xbf\x40\x12\x06\xdf\xac\x2c\xd1\x19\x28\x2e\xb3\xa9\xa7\x53\xf3\x67\x49\xfd\xe4\x9e\x3e\x01\x00\x00\xff\xff\xab\x2e\xe8\x77\xbc\x00\x00\x00"

func templatesSiAlertsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiAlertsTmpl,
		"templates/si/alerts.tmpl",
	)
}

func templatesSiAlertsTmpl() (*asset, error) {
	bytes, err := templatesSiAlertsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/alerts.tmpl", size: 188, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiAlmanacTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x72\xcc\xc9\x4d\xcc\x4b\x4c\x56\x52\xd0\xad\xad\xe5\xf2\xcb\x2f\xca\x4d\xcc\x51\xc8\xc8\x4c\xcf\xb0\x52\xa8\xae\xd6\x0b\x49\xcd\x2d\xf0\xc8\x4c\xcf\xd0\x83\x48\xe8\x39\xd7\xd6\x1e\xda\xa0\xe0\xac\xa0\x81\x45\xce\x0d\x2c\xe7\xa6\xc9\x15\x94\x9a\x9c\x5f\x94\x82\xc5\x10\x88\x04\x76\x43\xa0\x72\x30\x43\x14\xa2\x31\x25\x23\x53\x13\x8b\x6a\x6b\x63\x61\x8e\xcc\xc9\x2f\x87\x1b\xef\x93\x5f\x8e\xcb\x89\x48\x52\xe8\x2e\x44\x37\x01\x87\xfb\x90\xa4\x30\x9c\x87\x90\x83\xb9\xae\xba\x5a\x57\x21\x35\x2f\xa5\xb6\xb6\xba\x5a\x5f\x4b\x01\x1a\xca\x8e\x39\x89\xb9\x89\x79\xc9\x0a\x5a\xfa\xb5\xb5\x5c\x80\x00\x00\x00\xff\xff\xc9\xf4\xf2\x05\x7c\x01\x00\x00"

func templatesSiAlmanacTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiAlmanacTmpl,
		"templates/si/almanac.tmpl",
	)
}

func templatesSiAlmanacTmpl() (*asset, error) {
	bytes, err := templatesSiAlmanacTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/almanac.tmpl", size: 380, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiCurrent_observationTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x52\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x0c\x81\x42\xb3\xb0\xde\x7b\x6f\xc5\x8b\xd9\xd0\xa6\x2d\x8d\x69\xce\xb2\x35\x69\x86\xd8\x63\x23\xcb\x69\x8d\x98\xff\x5e\x24\x59\x89\xd3\x3d\x99\xf7\xe1\xa7\x99\x27\x39\xa7\xf1\x44\x8c\xb0\x29\x26\x63\x90\xed\xf7\x7a\x44\x73\x55\x96\x7a\xde\xc0\xb3\x48\xb6\xf0\xd0\xf4\xac\xc9\xd3\x23\x28\x0b\xce\xe5\x2b\xe7\xd7\xbe\x09\xdf\xbc\x9c\xda\x56\x04\x3e\x3a\x97\x1f\x6c\xa0\x76\xaf\x22\xdb\xec\xd1\x5e\x51\x87\x22\x19\x00\x54\xd8\x0d\x68\x94\x9d\x0c\x7e\xf2\x99\x1e\x17\x22\x50\x84\x08\x8f\x4a\x11\x28\xb7\xde\xeb\xdc\x33\xd0\x09\x18\x21\x7f\x43\x65\x77\xac\xf1\xef\xc1\x1a\xe2\xdf\xb0\xf9\xf6\x39\x0e\x0b\x00\x5e\x83\x20\x86\xc4\xff\xac\xd1\xe3\xa3\x90\x75\x04\x87\xcb\x0c\xc5\x6d\xb9\xf0\xd3\x11\x95\x3d\xa3\x89\xfa\x91\x58\x47\x96\x58\xaf\x53\x7e\x18\x1c\xc7\x34\x79\x02\xfb\x5a\x04\xba\x3a\xcc\x9f\xb8\x1d\x8b\x00\xf1\x16\x14\xeb\xb5\xb7\x32\xc8\x3a\x2f\x0d\x21\xeb\x76\x8e\xa1\x3f\xb1\x55\x96\xae\x08\xe7\xa9\x23\x4d\x76\x0e\xe9\x89\x7d\x5b\x48\x91\x0f\xde\xfc\x8a\x7f\x86\x9e\xd8\x06\x4f\x02\xf7\xfe\x12\x13\x3b\x7c\xa4\x56\xc7\x86\x76\x7f\xd1\x48\x35\xb5\xe9\xc0\x3b\xfc\xd2\x89\xc0\xa5\x1b\x97\x8d\x1b\x1a\x28\xde\x2c\xd8\x5e\xab\x39\x2d\xdf\xd0\x50\x79\xbc\x47\x6b\xa8\xf1\x1d\x74\xa9\x83\x24\xa5\x1a\xb2\x5b\xfd\xce\xbd\x3c\xc1\xf2\x00\xdf\xbf\x3f\x78\x7a\x11\xc9\xfe\x05\x00\x00\xff\xff\x21\x9d\x6c\xe6\xa2\x02\x00\x00"

func templatesSiCurrent_observationTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiCurrent_observationTmpl,
		"templates/si/current_observation.tmpl",
	)
}

func templatesSiCurrent_observationTmpl() (*asset, error) {
	bytes, err := templatesSiCurrent_observationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/current_observation.tmpl", size: 674, mode: os.FileMode(436), modTime: time.Unix(1511948526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiForecastTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8e\xc1\x0a\xc2\x30\x10\x44\xef\xfd\x8a\xa5\xc7\x42\xd3\xbb\xe7\x52\xf0\xe0\x2d\x3f\x10\x92\x51\x02\x12\x21\x59\xa1\x32\xec\xbf\x8b\xc1\x9c\xf6\xc1\xce\x1b\x86\x4c\xb8\xe7\x02\x99\x8f\x57\x45\x0c\x4d\x67\x59\xcd\xa6\x6b\x6b\x6f\x24\x09\x2a\xa4\xdb\x83\xc2\x6c\x22\x6b\x28\x0f\x88\xf3\xa7\x8e\xb4\x1b\xb0\x87\x4f\x17\x49\xe7\xb3\x3e\x61\x76\xf9\xa9\x47\x54\x8f\x53\x6f\xd0\x9a\x63\x7f\xa3\xa4\x7e\x57\xe9\x44\x6e\x8b\xfc\x37\x8c\x2e\x59\x36\xb3\xe9\x1b\x00\x00\xff\xff\x82\x3a\x0b\xee\x9b\x00\x00\x00"

func templatesSiForecastTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiForecastTmpl,
		"templates/si/forecast.tmpl",
	)
}

func templatesSiForecastTmpl() (*asset, error) {
	bytes, err := templatesSiForecastTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/forecast.tmpl", size: 155, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiHistoryTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x0c\x0c\x14\x48\x16\x88\x77\xf7\x9a\x6b\xd4\x36\x08\x90\x85\x51\x07\x9b\xf3\xc4\x1a\xc7\xd3\x4a\xa4\x4a\xd1\x8d\x0d\x82\xef\xd4\x67\xe8\x93\x15\xa4\x28\x59\xa4\x68\xd9\x45\x7d\xd3\x37\xfc\x66\xbe\xf9\x21\x4d\x1a\x53\xd2\x96\x05\xc1\xe2\x91\x5b\x2d\xd5\x71\x01\x77\xd6\x7e\x32\x46\xa1\x78\x27\x58\x16\xc8\xd5\x71\xbd\xaf\x6b\x54\x47\x6f\x79\x25\xd4\x3b\x52\xd0\x06\x6c\x2b\x15\x18\xb3\x2c\x50\xd3\x72\xa5\x48\xeb\xa3\xb5\xf7\x60\xcc\xef\x92\x05\x2c\x1f\xa4\x28\x59\xb3\x14\x2d\x2c\x60\xe1\x1d\xdf\x01\x6f\x01\x45\x09\xcb\xb5\x90\x1f\xb0\x7c\x96\x42\xef\x5e\xa4\x73\xe0\x80\x2d\x56\x15\x9f\x16\xd2\x9f\xdd\x3a\x0f\xc3\xe2\xc5\xf9\x00\xf7\x73\xe0\x3d\x68\x85\x1b\xf2\x6b\xa9\x6a\x29\xb6\x19\x33\x30\x6b\x6b\xa1\xae\xe1\x66\x04\xb1\xb5\xc0\xe2\xf6\x44\x80\x92\x1a\xbd\x1b\x68\x85\xfb\x4a\x78\x1e\x8b\x88\x5e\x3c\x68\x09\x25\x6a\xf2\xdc\x4c\x3a\x23\x2f\xf9\x64\xa1\xae\x7b\x21\x2c\x36\x04\x4f\xfb\xea\x08\xdf\x5a\xdd\x89\x71\xd0\xb7\xa7\x7d\x95\x4b\x26\xb5\xf5\xce\x7c\x45\x44\x69\xad\x31\x5f\x3e\xbb\x3a\xbe\xb8\x42\xc1\xe7\x2f\xa1\xb2\x91\xad\x6b\xc4\x60\x73\xc8\x6f\xc8\x22\x6e\xc2\x4a\xd1\x86\x9b\xa8\x05\x01\xd2\xe8\x1a\x9c\xf6\xc2\xf1\xde\x35\xdc\xa0\x96\xdb\x51\x0b\x6f\xe1\xeb\xf2\xeb\x19\x07\xc6\x84\x28\xa3\x0c\xc3\x92\x34\xad\x4c\x12\x4e\x72\x97\x04\x00\xbc\x50\xdd\x90\x42\xbd\x57\x74\xdf\xc5\x82\x67\x42\x11\xe1\xbe\x5b\x84\xc2\x61\x2e\xe2\x43\xd7\xa1\x80\xb8\x90\xbf\xdc\xf6\x5c\x3c\x4c\xa9\x78\x48\x98\x1d\x10\x13\x39\x13\x93\xd3\x90\x9c\x44\x2c\xe8\x5d\x11\x41\x81\xc7\xb6\x57\xff\x48\xa8\x59\xbc\x47\x26\xe7\x2c\xe0\x1d\xec\x50\x57\x11\x57\x8e\x89\xe1\xbb\x54\x35\x56\xd6\xc2\x4d\x96\x37\x98\x4b\x3c\xb6\x20\xfc\xd7\xad\x31\xa7\x6a\xbb\x5d\xab\x25\xcf\x78\xee\xa5\x16\xbf\x42\x3d\xb7\x2f\x32\x9a\xd3\xcd\x71\x9d\xbc\x64\x1e\xfc\x28\xfb\x1d\xb1\xa6\xe6\x92\xca\x20\xb4\xf5\x1b\x6e\x4d\x8d\x4e\x36\x5c\xce\x45\xd0\x79\x39\xc6\x75\x2a\x9f\xf6\xd5\x7f\x52\x99\x3f\x16\xe6\x55\xce\xc5\x38\xa7\xb2\x8b\xfb\x20\x65\x95\x9b\xb8\x80\x4f\x27\x6e\x62\x88\x27\xee\xbc\xf9\xe2\xc4\x9d\xa5\x9e\xaa\xf4\x70\x69\xe8\x32\xb2\xd3\xa1\xbb\x4e\xe1\xdc\xd0\x5d\x29\x34\xb4\x13\xc5\x74\xe6\xce\xc9\xbc\x1c\xe2\xca\x99\x43\xf1\x3f\x45\xe6\x3c\xc4\x23\x37\x13\x62\x66\xe4\x9e\x25\xb7\x93\xf3\xba\xa0\x0f\x58\x49\x16\x7a\x38\xad\x0b\xfa\x58\xe9\xba\x6f\x5e\x0f\x4c\x4e\xeb\x84\x88\x87\x98\x17\xbe\x27\x67\x75\x42\xe3\x24\x1c\x47\xd1\xfa\xca\x3e\xee\x6b\x2e\xd9\x5d\x7c\xfa\x13\x30\x00\xdd\x09\x3d\x58\x7f\x9a\xec\x31\xa7\x34\x5a\xfc\x8c\x87\xf1\xfa\x93\xb0\x78\x15\x8b\x64\xd5\x4a\x51\xdb\xa6\xc5\x1b\xc0\xbe\x76\x3d\xe0\xff\x5f\xdf\x86\x0a\xf6\x70\x74\xb3\xf1\xda\x62\x0f\x78\xc8\x39\x38\xa1\x09\x9f\x53\x05\x9c\x15\xc0\xb9\xf8\xaf\x2c\xca\x28\x17\x07\xc0\xba\x21\x2a\x87\x6c\x1c\xb4\x6e\x4a\xe7\xeb\x8f\x66\x37\x64\x13\x60\x7f\x65\x68\x76\xa3\x64\x52\x17\x78\x78\x4d\xe9\x1d\x94\x50\x79\x1a\x9d\xc5\x84\xda\x41\x09\x75\x50\x5e\xb0\xa2\xcd\x70\xcb\xf1\x32\x0b\x56\x85\xb5\xff\xfc\x7d\x12\x5e\xb0\xfa\xd9\x5a\x9f\xff\x0f\x6e\xf9\x8d\x2b\xd7\xf0\xb1\xaf\x13\xdc\xbb\xf9\xc1\xad\x97\x51\x0f\x6e\xdc\x1a\xa7\x82\xc7\x8d\x4c\x88\x78\x48\x78\x1e\x48\x68\x3c\x89\xc7\x69\x38\x1e\x47\x33\xc6\xdf\xfb\xee\xc2\x9d\x2c\xf3\x80\xf0\xb7\xb3\xef\xfe\x7c\x46\xc0\xbf\x90\x2b\x7c\xab\xc8\x3f\x21\xda\x86\x36\xbc\x65\x2a\xfd\xe1\xfd\x29\xfc\x0d\xcc\x3a\x8a\xaf\x80\xe1\x19\x13\x5e\x31\xdd\x45\xf0\xdf\x00\x00\x00\xff\xff\x55\x63\xc0\xc4\xdd\x0c\x00\x00"

func templatesSiHistoryTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiHistoryTmpl,
		"templates/si/history.tmpl",
	)
}

func templatesSiHistoryTmpl() (*asset, error) {
	bytes, err := templatesSiHistoryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/history.tmpl", size: 3293, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiLocationTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xbd\x0a\xc2\x40\x0c\xc7\x77\x9f\x22\x74\x2c\x34\xdd\xdd\x4a\x27\x41\xea\xe0\xe0\x1c\x6d\xd4\x03\xb9\x93\x34\x4b\x09\x79\x77\xf1\x48\x71\x76\xfd\x7f\xf2\x33\x9b\xf9\x9e\x32\x43\x73\x2c\x37\xd2\x54\x72\x03\x9d\xfb\xce\x4c\x28\x3f\x18\x70\x62\x92\xeb\x7a\x61\xd2\x27\xcb\x59\x6b\x64\xc1\x21\xc9\xbb\x88\x62\x08\x51\xc1\x31\xe9\xea\xbe\x07\x33\x3c\x8c\xc3\xa9\x8a\xfc\x5a\xb8\xfa\x53\x01\x12\x26\x58\x62\xe4\xeb\xe5\xd9\xdd\xac\x6f\xe1\xaf\xb7\xb6\x8f\xc3\x0e\x7e\x0b\xc1\xb1\x61\x6c\xa1\x4f\x00\x00\x00\xff\xff\x0f\xe2\xf7\x41\xe1\x00\x00\x00"

func templatesSiLocationTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiLocationTmpl,
		"templates/si/location.tmpl",
	)
}

func templatesSiLocationTmpl() (*asset, error) {
	bytes, err := templatesSiLocationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/location.tmpl", size: 225, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiMoon_phaseTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x4d\xca\x83\x40\x10\x44\xf7\x9e\xa2\x71\xf5\x7d\x42\x74\xef\x09\x92\x85\x24\x90\x13\x48\x2c\xc9\x80\xe9\x81\xf9\x59\x35\x75\xf7\x30\x83\x88\xd9\x75\x3d\xfa\xc1\x33\x5b\xb0\x3a\x85\xb4\x93\xf7\xfa\x78\xcf\x11\xad\x5c\xc8\xa6\x4c\xa9\x7b\x14\xb3\xbe\x5e\xf7\xb5\x50\x52\xfe\x0a\x41\x78\x41\xd3\x6d\xdb\xf2\xc7\xe9\x9c\xb0\x90\xff\xcd\x33\x6b\x70\x11\x22\x52\xb5\x7d\xf6\x57\x9f\x03\x39\x9e\xc8\xe4\x34\x27\x90\xc5\x88\x48\x72\x32\x22\xd2\xaf\x50\xc0\xf1\x6f\x06\x5d\x48\xb3\xa1\x93\xbd\xfd\x48\x97\x6e\xa8\xf1\xdf\x00\x00\x00\xff\xff\xad\x90\xb9\x9e\xd6\x00\x00\x00"

func templatesSiMoon_phaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiMoon_phaseTmpl,
		"templates/si/moon_phase.tmpl",
	)
}

func templatesSiMoon_phaseTmpl() (*asset, error) {
	bytes, err := templatesSiMoon_phaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/moon_phase.tmpl", size: 214, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiTideTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x41\x4b\xf3\x40\x10\x86\xef\xfd\x15\x2f\xa1\x87\xaf\xe5\xeb\x36\x54\xf1\x50\xf0\x20\x14\x44\x41\x2f\xcd\x5d\x46\x76\x56\x16\x92\x8d\xc4\xb5\x1a\x86\xfd\xef\xb2\x9b\x84\xb4\x26\x60\x2e\x61\xc2\x33\xef\xfb\x24\x59\x11\xcd\xc6\x3a\x46\x56\x58\xcd\x19\x36\x21\x2c\x44\xac\x81\x8a\xf3\xf1\xb3\xaa\xa8\x69\xd3\xd3\xc2\x6a\x2a\xa1\xc9\x13\x4c\xdd\x40\xe4\x9f\x75\x9a\xbf\x3b\xf0\xc1\x99\x1a\xf9\xaa\x5b\xb2\x9e\x53\xca\x52\x93\x67\xec\x6f\x71\xa2\x06\xe7\xf4\x10\x9b\xaf\xd4\x81\x3c\xab\xa2\x8e\xb7\xbe\xdb\xdb\x8a\x0d\xd2\xae\xba\x67\x8f\xec\x91\x1c\x76\xff\xb1\xcb\xf3\x9b\x3d\xb2\xc4\x6c\xd0\x90\x7b\xe3\xa9\xa4\xc8\xd2\xf1\xd7\xa1\xef\x9d\x49\xb7\x06\x8e\xc7\x74\x75\xa0\x16\xc3\x4a\x1c\xce\x15\x86\xa4\x79\x83\xe5\x4b\xac\xe8\x92\x8e\xec\x47\x7c\xd3\x03\xec\x74\x08\x22\xdb\x35\xfe\x2a\xc5\x7a\x1b\xc2\x02\xf1\x12\x89\xd2\xa4\x8a\xf6\x9d\x43\x00\x79\x4c\x75\xae\xf6\xf9\x35\xee\x9e\xb2\x49\xcf\xcc\x47\x49\xc9\x89\x2a\x3f\x92\xda\x20\xf4\x8b\x4a\xd6\xcf\x35\xfc\xf8\x97\xe9\x44\xb6\xa4\xd7\x92\xd5\x42\xe4\xe2\x65\xe6\x76\x2f\x4d\xfa\x43\x15\xb9\x4e\xe1\x27\x00\x00\xff\xff\xda\x96\x80\xc1\x68\x02\x00\x00"

func templatesSiTideTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiTideTmpl,
		"templates/si/tide.tmpl",
	)
}

func templatesSiTideTmpl() (*asset, error) {
	bytes, err := templatesSiTideTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/tide.tmpl", size: 616, mode: os.FileMode(436), modTime: time.Unix(1511948526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSiTripTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x5d\x6f\xda\x30\x14\x86\xef\xf9\x15\x47\x95\x26\x75\x95\xf8\x08\x55\x3b\x2d\x77\x1b\x1d\xeb\x55\xa9\x06\xd2\xae\x3d\x7c\x42\xac\x25\xc7\x91\x71\xc8\x98\xe5\xff\x3e\x39\x24\x40\x50\xec\xec\x2e\xe6\x7d\x9f\x87\x83\x89\x8e\x31\x1c\x13\x41\x08\x77\x1b\x25\x8a\x3b\x18\x5b\x3b\x32\x46\x24\x30\xf9\xa6\x94\x54\xcd\xf9\x74\xa8\x1f\xc7\x80\xd9\x1e\xdb\xcf\x37\x42\x67\x68\xed\x68\xad\x99\x16\x92\x62\x30\x66\xf2\x45\xa8\x42\x2a\xbd\x90\x1c\xeb\x52\x25\x74\x0a\x93\x45\xca\x68\x8b\xab\xa4\x26\x4f\x07\x90\x49\x3c\x02\x80\x0d\xe6\xc5\xbe\x7e\x02\x80\xd5\x01\x15\x3c\xce\x61\x01\xf7\x9f\x67\xb0\xfc\x58\x2b\x5d\xc3\x05\x6f\x82\x50\x1f\x27\xef\xa8\xb6\x48\x9a\xed\xd0\xda\x0f\x0d\xf7\x15\x75\x85\x48\x10\x3d\x39\xf4\xd9\xa1\xc0\x88\x7b\x55\x6b\xf1\x67\xc0\x34\x73\xe0\xe3\xbc\x15\x45\xcf\x67\x71\x47\xb4\x54\x88\x7f\x05\xed\x3c\xae\x4c\x56\x57\xa6\x33\x59\x07\x7e\xf4\x05\xab\x42\x0a\xd2\xc0\x7e\xc9\x03\xc2\x3c\x72\x86\x4f\xe7\xef\x6e\x2f\x73\x5d\x66\x5a\x1d\x5f\x58\xcf\x0f\xb9\x31\x5c\x5d\x4b\xc7\xf0\x5a\xe6\x82\xf7\x0a\x7e\x0a\xe2\x7b\x90\xee\xef\x88\x66\x90\x17\x29\xdc\x47\x4f\xf0\x3b\x9f\xa6\x5d\x83\xeb\xf5\x8f\xd0\x19\x94\xe8\xb8\xc8\x64\x79\xaa\xbe\xb1\x1c\xad\x05\xce\x8e\x71\xa0\x15\x12\x0e\xba\xfe\x4f\xf3\xce\x94\xce\x86\x07\xbb\xad\x05\x95\x0a\xb7\xa2\x68\x4c\x71\x4f\x12\x82\x97\x72\x77\x19\x23\xee\x49\x42\xf0\x0f\x26\xc8\x43\xb7\x51\x08\xdf\xa4\x25\x71\x54\x1e\xc3\x55\x1a\x94\x48\x45\x8c\x4b\x9f\xe4\x92\x86\x24\xaf\x4c\x64\x1e\x43\x1b\x05\x5f\x36\x92\x95\x07\x6f\xa3\x21\x7c\x45\xdf\x95\x2c\x89\xfb\x1c\xe7\xbc\x2b\x32\x06\x89\x5b\x6b\xcc\xf4\x01\x6e\xd6\xde\xc3\xb4\xd9\x99\x63\xb8\x74\x44\x02\xa7\x35\xdb\x9b\x36\x9b\xd9\x2d\xe6\xb6\xf0\x2f\x00\x00\xff\xff\xb8\x41\x4a\x74\xaf\x05\x00\x00"

func templatesSiTripTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSiTripTmpl,
		"templates/si/trip.tmpl",
	)
}

func templatesSiTripTmpl() (*asset, error) {
	bytes, err := templatesSiTripTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/si/trip.tmpl", size: 1455, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsAlertsTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8e\x31\xaa\xc3\x40\x0c\x44\xfb\x3d\x85\xb0\x3a\x83\xed\x33\x7c\xf8\x29\x52\x24\x77\x10\xf6\xc4\x2c\x98\xb5\x59\x6d\x42\x40\xe8\xee\x21\x8a\x3b\x3d\xcd\x30\x3c\xb3\x05\x8f\x5c\x40\xdd\xdf\x86\xda\xb4\xa3\xc1\x3d\x99\x55\x29\x2b\x68\x0c\x62\x66\x32\x1b\xff\xa1\x73\xcd\x47\xcb\x7b\x71\x27\x66\x4e\xe9\xaa\xfa\xc4\x42\xd2\x22\x97\x06\xf7\x74\x79\x1f\xb9\x42\xcf\xe7\x49\xb1\x39\xde\xa0\x2a\x2b\x02\xb0\x29\x62\xfd\xbe\x93\xcc\x2d\xbf\x40\x12\x06\xdf\xac\x2c\xd1\x19\x28\x2e\xb3\xa9\xa7\x53\xf3\x67\x49\xfd\xe4\x9e\x3e\x01\x00\x00\xff\xff\xab\x2e\xe8\x77\xbc\x00\x00\x00"

func templatesUsAlertsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsAlertsTmpl,
		"templates/us/alerts.tmpl",
	)
}

func templatesUsAlertsTmpl() (*asset, error) {
	bytes, err := templatesUsAlertsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/alerts.tmpl", size: 188, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsAlmanacTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x72\xcc\xc9\x4d\xcc\x4b\x4c\x56\x52\xd0\xad\xad\xe5\xf2\xcb\x2f\xca\x4d\xcc\x51\xc8\xc8\x4c\xcf\xb0\x52\xa8\xae\xd6\x0b\x49\xcd\x2d\xf0\xc8\x4c\xcf\xd0\x83\x48\xe8\xb9\xd5\xd6\x1e\xda\xa0\xe0\xa6\xa0\x81\x45\xce\x19\x2c\xe7\xac\xc9\x15\x94\x9a\x9c\x5f\x94\x82\xc5\x10\x88\x04\x76\x43\xa0\x72\x30\x43\x14\xa2\x31\x25\x23\x53\x13\x8b\x6a\x6b\x63\x61\x8e\xcc\xc9\x2f\x87\x1b\xef\x93\x5f\x8e\xcb\x89\x48\x52\xe8\x2e\x44\x37\x01\x87\xfb\x90\xa4\x30\x9c\x87\x90\x83\xb9\xae\xba\x3a\x35\x2f\xa5\xb6\xb6\xba\x5a\x5f\x4b\x01\x1a\xc6\x8e\x39\x89\xb9\x89\x79\xc9\x0a\x5a\xfa\xb5\xb5\x5c\x80\x00\x00\x00\xff\xff\x3a\x99\x7b\xd9\x7a\x01\x00\x00"

func templatesUsAlmanacTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsAlmanacTmpl,
		"templates/us/almanac.tmpl",
	)
}

func templatesUsAlmanacTmpl() (*asset, error) {
	bytes, err := templatesUsAlmanacTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/almanac.tmpl", size: 378, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsCurrent_observationTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\x51\xab\xdb\x30\x0c\x85\xdf\xf3\x2b\x44\x61\xb0\x5e\xb8\xb9\xef\x7b\x1b\x29\xa1\x85\x75\x1b\x6b\x58\x9f\x9d\x58\x5d\xc5\x12\x25\x38\x4e\xb7\x60\xf4\xdf\x87\xed\x78\x4d\x7b\x9f\xca\xf9\x74\x7a\x2c\x29\x72\x4e\xe3\x85\x18\x61\x53\x4c\xc6\x20\xdb\x6f\xf5\x88\xe6\xa6\x2c\xf5\xbc\x81\x57\x91\x6c\xe1\xd0\xf4\xac\xc9\xe3\x11\x94\x05\xe7\xf2\x95\xf3\x4b\xdf\x84\xdf\xbc\x9c\xda\x56\x04\x3e\x3a\x97\x9f\x6c\x40\x87\x9d\xc8\x36\x7b\xb4\x57\xd4\xa1\x48\x06\x00\x15\x76\x03\x1a\x65\x27\x83\x9f\x7c\xa6\xd7\xa5\x08\x94\x21\xc2\xab\x42\x04\x8a\xad\xf7\x3a\xf7\x0a\x74\x01\x46\xc8\xf7\xa8\xec\x81\x35\xfe\x3d\x59\x43\xfc\x0b\x36\x5f\x3f\xc7\x66\x01\xc0\xd7\x20\x14\x43\xe2\x93\x35\x7a\x7c\x14\xb2\x8e\xe2\xf4\x7b\x86\xe2\xff\x70\xe1\x4f\x67\x54\xf6\x8a\x26\xd6\xcf\xc4\x3a\x52\x62\xbd\x4e\xf9\x6e\x70\x1c\x53\xe7\x49\x1c\x58\x04\x88\x43\xff\x89\x1d\x6b\x11\xe8\xea\x2d\x28\xd6\x6b\x6f\x65\x90\x75\x5e\x1a\x42\xd6\xed\x1c\x43\x7f\x60\xab\x2c\xdd\x10\xae\x53\x47\x9a\xec\x1c\xd2\x13\xdd\x2f\x50\xe4\x83\x37\xef\xf0\xcf\xd0\x13\xdb\xe0\x49\xe2\xbe\xbf\x44\xe2\x0e\x1f\x50\xb9\x7a\x36\x6c\xf7\x27\x8d\x54\x53\x9b\x1e\xbc\xcb\x23\xf9\xe6\xa9\xc5\x71\x99\xb9\xa1\x81\xe2\xb7\x05\xdb\x6b\x35\xa7\xf1\x1b\x1a\x2a\xaf\x9f\x36\x90\xf0\x11\xad\xa1\xc6\x67\x75\xfe\x1e\xc2\xfa\x9d\x7b\x7b\x81\xe5\x00\xdf\xdf\x1f\xbc\xbc\x89\x64\xff\x02\x00\x00\xff\xff\x2e\x8e\xc7\x2e\xa2\x02\x00\x00"

func templatesUsCurrent_observationTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsCurrent_observationTmpl,
		"templates/us/current_observation.tmpl",
	)
}

func templatesUsCurrent_observationTmpl() (*asset, error) {
	bytes, err := templatesUsCurrent_observationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/current_observation.tmpl", size: 674, mode: os.FileMode(436), modTime: time.Unix(1511948526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsForecastTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\xb1\x0a\xc3\x30\x0c\x44\x77\x7f\x85\xc8\x18\x88\xb3\x77\x0e\x81\xee\xfe\x01\x11\x5f\x4b\xa0\xb8\x10\xab\x90\x72\xe8\xdf\x4b\x4d\x3c\xe9\x81\xee\xdd\x91\x19\x8f\xbd\x40\x86\xf5\x7d\x60\xd3\x6a\x83\x4c\xee\xe1\x5e\xeb\x07\x59\xd4\x84\x8c\x8b\x1a\xdc\x03\x79\x68\x79\x42\x62\x3a\xad\xa7\x63\x87\x45\xbf\x4d\x24\x63\xda\xed\x05\xf7\xdb\x5f\x5d\x37\x4b\x38\xad\x3d\x50\x72\xbb\x93\x34\x22\xe7\x51\xae\xf5\xde\x22\xe3\xec\x1e\x7e\x01\x00\x00\xff\xff\xd2\x1f\x7f\xcc\x95\x00\x00\x00"

func templatesUsForecastTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsForecastTmpl,
		"templates/us/forecast.tmpl",
	)
}

func templatesUsForecastTmpl() (*asset, error) {
	bytes, err := templatesUsForecastTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/forecast.tmpl", size: 149, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsHistoryTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\xcb\x6e\xeb\x36\x10\xdd\xdf\xaf\x18\x18\x28\x90\x04\x88\x72\xef\x36\xdb\xa8\x6d\x10\x20\x17\x46\x1d\xdc\xac\x27\xd6\xd8\x9e\x56\x22\x55\x8a\x6e\x6c\x10\xfa\xa7\x7e\x43\xbf\xac\x20\x45\x3d\x48\xd1\x8f\xa2\xde\xe9\x0c\xcf\xcc\x99\x07\x69\xd2\x98\x82\x36\x2c\x08\x16\xcf\xdc\x68\xa9\x8e\x0b\xb8\x6f\xdb\x2f\xc6\x28\x14\x5b\x82\x2c\x47\x2e\x8f\xab\x7d\x55\xa1\x3a\x3a\xcb\x3b\xa1\xde\x91\x82\xc6\x63\x1b\xa9\xc0\x98\x2c\x47\x4d\xd9\x52\x91\xd6\xc7\xb6\x7d\x04\x63\x7e\x97\x2c\x20\x7b\x92\xa2\x60\xcd\x52\x34\xb0\x80\x85\x73\x7c\x0f\xbc\x01\x14\x05\x64\x2b\x21\x3f\x21\x7b\x95\x42\xef\xde\xa4\x75\x60\x81\x0d\x96\x25\x8f\x0b\xe9\xcf\x6e\x9d\x83\x61\xf1\x66\x7d\x80\xfd\x59\xf0\x11\xb4\xc2\x35\xb9\xb5\x54\x36\x14\xda\x8c\xc9\x26\x0e\x81\x05\xdc\x4c\xa0\xaa\x6d\xa1\xaa\x6e\x47\x02\x14\x54\xeb\xdd\x40\xcb\xed\x57\xc4\x73\x58\x40\x74\xe2\x41\x4b\x28\x50\x93\xe3\xa6\xd3\xe9\xbd\x24\xac\xa1\x10\x16\x6b\x82\x97\x7d\x79\x84\x6f\x8d\xee\xc4\x58\xe8\xdb\xcb\xbe\x4c\x25\x13\xdb\x7a\x67\xae\x22\xa2\x68\x5b\x63\x1e\xee\x6c\x1d\xdf\x6c\xa1\xe0\xee\xc1\x57\x36\xb0\x75\x8d\x18\x6c\x16\xf9\x0d\x59\x84\x4d\x58\x2a\x5a\x73\x1d\xb4\xc0\x43\x1a\x6d\x83\xe3\x5e\x58\xde\x56\xc3\x0d\x6a\xb9\x99\xb4\xf0\x16\xbe\x66\x5f\x4f\x38\x30\xa6\x8f\x32\x66\xd8\x01\xb3\xb4\x12\x49\x58\xc9\x5d\x12\x00\xf0\x46\x55\x4d\x0a\xf5\x5e\xd1\x63\x17\x0b\x5e\x09\x45\x80\xbb\x6e\x11\x0a\x8b\xd9\x88\xbf\x74\x1d\xf2\x88\x0d\xf9\x74\xdb\x73\xf1\x30\xa7\xe2\x21\x62\x76\x40\x48\xe4\x44\x4c\x8e\x43\x72\x14\x31\xa7\xad\x22\x82\x1c\x8f\x4d\xaf\xfe\x99\x50\xb3\xd8\x06\x26\xeb\xcc\xe3\x1d\x6c\x51\x5b\x11\x5b\x8e\x99\xe1\xbb\x54\x15\x96\x6d\x0b\x37\x49\xde\x60\x2e\xf0\xd8\x80\x70\x5f\xb7\xc6\x8c\xd5\xb6\xbb\x56\x4b\x3e\xe3\xb9\x97\x9a\xff\x0a\xd5\xb9\x7d\x91\xd0\x1c\x6f\x8e\xeb\xe4\x45\xf3\xe0\x46\xd9\xed\x88\x15\xd5\x97\x54\x7a\xa1\x8d\xdb\x70\x2b\xaa\x75\xb4\xe1\x52\x2e\xbc\xce\xcb\x31\xae\x53\xf9\xb2\x2f\xff\x93\xca\xf4\xb1\x70\x5e\xe5\xb9\x18\xa7\x54\x76\x71\x9f\xa4\x2c\x53\x13\xe7\xf1\xf9\xc4\xcd\x0c\xe1\xc4\x9d\x36\x5f\x9c\xb8\x93\xd4\xb1\x4a\x4f\x97\x86\x2e\x21\x3b\x1e\xba\xeb\x14\x9e\x1b\xba\x2b\x85\xfa\x76\xa2\x98\xcf\xdc\x29\x99\x97\x43\x5c\x39\x73\x28\xfe\xa7\xc8\x94\x87\x70\xe4\xce\x84\x38\x33\x72\xaf\x92\x9b\xd9\x79\x9d\xd3\x27\x2c\x25\x0b\x3d\x9c\xd6\x39\x7d\x2e\x35\xf7\xcd\xeb\x81\xd9\x69\x1d\x11\xf1\x10\xf2\xfc\xf7\xec\xac\x8e\x68\x1c\x85\xe3\x20\x5a\x5f\xd9\xe7\x7d\xc5\x05\xdb\x8b\x4f\x7f\x02\x7a\xa0\x3b\xa1\x07\xeb\x4f\xb3\x3d\x66\x95\x06\x8b\x5f\xf1\x30\x5d\x3f\x0a\x0b\x57\xb1\x88\x56\x2d\x15\x35\x4d\x5c\xbc\x01\xec\x6b\xd7\x03\xd3\x0b\xc9\x04\x76\xff\xb2\x1f\xd3\x2a\x86\x1e\xf0\x90\x72\x30\xa2\x11\x9f\x63\x05\x9c\x14\xc0\xa9\xf8\xef\x2c\x8a\x20\x17\x0b\xc0\xaa\x26\x2a\x86\x6c\x2c\xb4\xaa\x0b\xeb\xab\xaa\x77\x43\x36\x1e\xb6\xce\xfe\xa8\x77\xd3\x6c\x62\x1f\x78\x78\x8f\xf9\x1d\x14\x73\x79\x1e\x9f\xc5\x8c\xdb\x41\x31\x77\x10\x9f\xb3\xa2\xf5\x70\xd1\x71\x4a\x73\x56\x79\xdb\xfe\xf3\xf7\xa8\x3d\x67\xf5\x73\xdb\x3a\xf2\x0f\x6e\xf8\x83\x4b\xdb\xf3\xa9\xaf\x11\xee\xdd\x58\xc4\xea\xe0\xc1\xcd\x0f\x6e\x9c\x8c\x6a\x9a\x7d\x44\xc4\x43\xc4\x73\x40\x44\xe3\x59\x3c\x8e\xc3\xf1\x34\x9a\x31\xee\xea\x77\xef\xaf\x65\xa9\x37\xc4\xdd\x83\x7b\x46\x7c\x77\xa7\x34\x02\xfe\x85\x5c\xe2\x47\x49\xee\x21\xd1\xd4\xb4\xe6\x0d\x53\xe1\x8e\xf0\x2f\xfe\xcf\xe0\x92\xaf\xf0\x2e\xe8\xdf\x33\xfe\x39\xd3\xaf\xf9\x37\x00\x00\xff\xff\xf9\x16\x3e\x46\xe8\x0c\x00\x00"

func templatesUsHistoryTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsHistoryTmpl,
		"templates/us/history.tmpl",
	)
}

func templatesUsHistoryTmpl() (*asset, error) {
	bytes, err := templatesUsHistoryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/history.tmpl", size: 3304, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsLocationTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x3d\xcb\x02\x31\x0c\xc7\xf7\xe7\x53\x84\x1b\x0b\xd7\xee\xcf\x76\xdc\x24\xc8\x39\x38\x38\x47\x2f\x6a\x41\x5a\x49\xb3\x1c\x21\xdf\x5d\x0c\x15\x67\xd7\xff\x2b\x3f\xd5\x95\xae\xb9\x10\x0c\xfb\x7a\x41\xc9\xb5\x0c\x30\x9a\xfd\xa9\x32\x96\x1b\x41\x5c\x08\xf9\xbc\x9d\x08\xe5\x4e\x7c\x14\x8f\xb4\x38\x65\x7e\x56\x96\xd8\x85\x5e\x89\x73\x96\xcd\xec\x1f\x54\xe3\x6e\x9e\x0e\x2e\xd2\xa3\x91\xfb\x4b\x05\x64\x42\x68\x7d\xe4\xed\x95\xd5\x4c\x35\x05\xf8\xe9\x2d\x24\x5f\x1e\xe1\xdb\xef\x14\x1f\x08\x08\xc9\x3f\x5f\x01\x00\x00\xff\xff\x4a\xc0\x63\x38\xdf\x00\x00\x00"

func templatesUsLocationTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsLocationTmpl,
		"templates/us/location.tmpl",
	)
}

func templatesUsLocationTmpl() (*asset, error) {
	bytes, err := templatesUsLocationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/location.tmpl", size: 223, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsMoon_phaseTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x4d\xca\x83\x40\x10\x44\xf7\x9e\xa2\x71\xf5\x7d\x42\x74\xef\x09\x92\x85\x24\x90\x13\x48\x2c\xc9\x80\xe9\x81\xf9\x59\x35\x75\xf7\x30\x83\x88\xd9\x75\x3d\xfa\xc1\x33\x5b\xb0\x3a\x85\xb4\x93\xf7\xfa\x78\xcf\x11\xad\x5c\xc8\xa6\x4c\xa9\x7b\x14\xb3\xbe\x5e\xf7\xb5\x50\x52\xfe\x0a\x41\x78\x41\xd3\x6d\xdb\xf2\xc7\xe9\x9c\xb0\x90\xff\xcd\x33\x6b\x70\x11\x22\x52\xb5\x7d\xf6\x57\x9f\x03\x39\x9e\xc8\xe4\x34\x27\x90\xc5\x88\x48\x72\x32\x22\xd2\xaf\x50\xc0\xf1\x6f\x06\x5d\x48\xb3\xa1\x93\xbd\xfd\x48\x97\x6e\xa8\xf1\xdf\x00\x00\x00\xff\xff\xad\x90\xb9\x9e\xd6\x00\x00\x00"

func templatesUsMoon_phaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsMoon_phaseTmpl,
		"templates/us/moon_phase.tmpl",
	)
}

func templatesUsMoon_phaseTmpl() (*asset, error) {
	bytes, err := templatesUsMoon_phaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/moon_phase.tmpl", size: 214, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsTideTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x41\x4b\xf3\x40\x10\x86\xef\xfd\x15\x2f\xa1\x87\xaf\xe5\xeb\x36\x54\xf1\x50\xf0\x20\x14\x44\x41\x2f\xcd\x5d\x46\x76\x56\x16\x92\x8d\xc4\xb5\x1a\x86\xfd\xef\xb2\x9b\x84\xb4\x26\x60\x2e\x61\xc2\x33\xef\xfb\x24\x59\x11\xcd\xc6\x3a\x46\x56\x58\xcd\x19\x36\x21\x2c\x44\xac\x81\x8a\xf3\xf1\xb3\xaa\xa8\x69\xd3\xd3\xc2\x6a\x2a\xa1\xc9\x13\x4c\xdd\x40\xe4\x9f\x75\x9a\xbf\x3b\xf0\xc1\x99\x1a\xf9\xaa\x5b\xb2\x9e\x53\xca\x52\x93\x67\xec\x6f\x71\xa2\x06\xe7\xf4\x10\x9b\xaf\xd4\x81\x3c\xab\xa2\x8e\xb7\xbe\xdb\xdb\x8a\x0d\xd2\xae\xba\x67\x8f\xec\x91\x1c\x76\xff\xb1\xcb\xf3\x9b\x3d\xb2\xc4\x6c\xd0\x90\x7b\xe3\xa9\xa4\xc8\xd2\xf1\xd7\xa1\xef\x9d\x49\xb7\x06\x8e\xc7\x74\x75\xa0\x16\xc3\x4a\x1c\xce\x15\x86\xa4\x79\x83\xe5\x4b\xac\xe8\x92\x8e\xec\x47\x7c\xd3\x03\xec\x74\x08\x22\xdb\x35\xfe\x2a\xc5\x7a\x1b\xc2\x02\xf1\x12\x89\xd2\xa4\x8a\xf6\x9d\x43\x00\x79\x4c\x75\xae\xf6\xf9\x35\xee\x9e\xb2\x49\xcf\xcc\x47\x49\xc9\x89\x2a\x3f\x92\xda\x20\xf4\x8b\x4a\xd6\xcf\x35\xfc\xf8\x97\xe9\x44\xb6\xa4\xd7\x92\xd5\x42\xe4\xe2\x65\xe6\x76\x2f\x4d\xfa\x43\x15\xb9\x4e\xe1\x27\x00\x00\xff\xff\xda\x96\x80\xc1\x68\x02\x00\x00"

func templatesUsTideTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsTideTmpl,
		"templates/us/tide.tmpl",
	)
}

func templatesUsTideTmpl() (*asset, error) {
	bytes, err := templatesUsTideTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/tide.tmpl", size: 616, mode: os.FileMode(436), modTime: time.Unix(1511948526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUsTripTmpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcb\x6e\xdb\x30\x10\x45\xf7\xfe\x8a\x41\x80\x02\x4d\x00\x3f\x83\xa6\xa8\x77\xad\x52\x37\xab\x38\xa8\x0d\x74\xcd\x9a\x23\x6b\x50\x69\x28\xd0\x54\x54\x97\xe0\xbf\x17\xa2\xa5\xf8\x01\x91\xce\x4e\xf4\xbd\xe7\x78\x4c\x0b\x63\xad\xc4\x94\x18\xe1\x66\xad\xa9\xbc\x81\xa1\x73\x03\x6b\x29\x85\xd1\x77\xad\x95\x6e\xcf\x87\x83\x7f\x1c\x02\xe6\x3b\xec\x3e\x5f\x93\xc9\xd1\xb9\xc1\xca\x08\x43\x8a\xe7\x60\xed\xe8\x2b\xe9\x52\x69\x93\x28\x89\xbe\x54\x93\xc9\x60\x94\x64\x82\x37\xb8\x4c\x3d\x79\x38\x80\x4a\xe7\x03\x00\x58\x63\x51\xee\xfc\x13\x00\x2c\x5f\x51\xc3\x97\x09\x2c\xe0\xe3\xfd\x0c\x92\x5b\xaf\x6c\x1a\x4d\xf0\x4c\x8c\x66\x3f\x7a\x41\xbd\x41\x36\x62\x8b\xce\x7d\x68\xb9\x6f\x68\x6a\x44\x86\x07\x8f\x4e\x3f\x41\x72\x0b\x82\x65\x50\xb5\xa2\xbf\x57\x4c\xf7\xb3\x86\x9c\x74\xa2\x56\xfc\x70\x29\x5a\x68\xc4\x7f\xc4\xdb\x80\x2b\x57\xf5\x89\xe9\x8d\xf4\x41\x18\x7d\xc4\xba\x54\xc4\x06\xc4\x6f\xf5\x8a\xf0\xd9\x7f\xf7\x6c\xda\x19\xba\xcb\x5c\x55\xb9\xd1\xfb\x47\xd1\xf3\x43\x2e\x0c\x27\xd7\x72\x66\x78\xaa\x0a\x92\xbd\x82\x5f\xc4\x72\x07\xaa\xf9\x3b\xa6\x13\x28\xca\xcc\xe3\x7f\x8a\x71\x76\x6e\x68\x7a\xfd\x23\x9c\x0d\xca\xbc\x4f\x72\x55\x1d\xaa\xcf\xa2\x40\xe7\x40\x8a\xfd\x3c\xd2\x8a\x09\xaf\xba\xde\xa7\x79\x11\xda\xe4\xd7\x07\xbb\xac\x45\x95\x1a\x37\x54\xb6\xa6\x79\x4f\x12\x83\x17\x6a\x7b\x1c\x63\xde\x93\xc4\xe0\x9f\x82\x38\x40\x77\x51\x0c\x5f\x67\x15\x4b\xd4\x01\xc3\x49\x1a\x95\x28\xcd\x42\xaa\x90\xe4\x98\xc6\x24\x4f\x82\xf2\x80\xa1\x8b\xa2\x2f\x1b\xab\x3a\x80\x77\xd1\x35\x7c\xc9\x3f\xb4\xaa\x58\x86\x1c\x6f\xf9\xb9\xc8\x5a\x64\xe9\x9c\xb5\xe3\x3b\xb8\x58\x7b\x77\xe3\x76\x67\x0e\xe1\xd8\xa1\x14\x0e\x6b\xb6\x37\x6d\x37\x73\xb3\x98\xbb\xc2\xff\x00\x00\x00\xff\xff\x6d\xe4\x90\xcb\xaf\x05\x00\x00"

func templatesUsTripTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUsTripTmpl,
		"templates/us/trip.tmpl",
	)
}

func templatesUsTripTmpl() (*asset, error) {
	bytes, err := templatesUsTripTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/us/trip.tmpl", size: 1455, mode: os.FileMode(436), modTime: time.Unix(1511944434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/response.tmpl":               templatesResponseTmpl,
	"templates/si/alerts.tmpl":              templatesSiAlertsTmpl,
	"templates/si/almanac.tmpl":             templatesSiAlmanacTmpl,
	"templates/si/current_observation.tmpl": templatesSiCurrent_observationTmpl,
	"templates/si/forecast.tmpl":            templatesSiForecastTmpl,
	"templates/si/history.tmpl":             templatesSiHistoryTmpl,
	"templates/si/location.tmpl":            templatesSiLocationTmpl,
	"templates/si/moon_phase.tmpl":          templatesSiMoon_phaseTmpl,
	"templates/si/tide.tmpl":                templatesSiTideTmpl,
	"templates/si/trip.tmpl":                templatesSiTripTmpl,
	"templates/us/alerts.tmpl":              templatesUsAlertsTmpl,
	"templates/us/almanac.tmpl":             templatesUsAlmanacTmpl,
	"templates/us/current_observation.tmpl": templatesUsCurrent_observationTmpl,
	"templates/us/forecast.tmpl":            templatesUsForecastTmpl,
	"templates/us/history.tmpl":             templatesUsHistoryTmpl,
	"templates/us/location.tmpl":            templatesUsLocationTmpl,
	"templates/us/moon_phase.tmpl":          templatesUsMoon_phaseTmpl,
	"templates/us/tide.tmpl":                templatesUsTideTmpl,
	"templates/us/trip.tmpl":                templatesUsTripTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"response.tmpl": &bintree{templatesResponseTmpl, map[string]*bintree{}},
		"si": &bintree{nil, map[string]*bintree{
			"alerts.tmpl":              &bintree{templatesSiAlertsTmpl, map[string]*bintree{}},
			"almanac.tmpl":             &bintree{templatesSiAlmanacTmpl, map[string]*bintree{}},
			"current_observation.tmpl": &bintree{templatesSiCurrent_observationTmpl, map[string]*bintree{}},
			"forecast.tmpl":            &bintree{templatesSiForecastTmpl, map[string]*bintree{}},
			"history.tmpl":             &bintree{templatesSiHistoryTmpl, map[string]*bintree{}},
			"location.tmpl":            &bintree{templatesSiLocationTmpl, map[string]*bintree{}},
			"moon_phase.tmpl":          &bintree{templatesSiMoon_phaseTmpl, map[string]*bintree{}},
			"tide.tmpl":                &bintree{templatesSiTideTmpl, map[string]*bintree{}},
			"trip.tmpl":                &bintree{templatesSiTripTmpl, map[string]*bintree{}},
		}},
		"us": &bintree{nil, map[string]*bintree{
			"alerts.tmpl":              &bintree{templatesUsAlertsTmpl, map[string]*bintree{}},
			"almanac.tmpl":             &bintree{templatesUsAlmanacTmpl, map[string]*bintree{}},
			"current_observation.tmpl": &bintree{templatesUsCurrent_observationTmpl, map[string]*bintree{}},
			"forecast.tmpl":            &bintree{templatesUsForecastTmpl, map[string]*bintree{}},
			"history.tmpl":             &bintree{templatesUsHistoryTmpl, map[string]*bintree{}},
			"location.tmpl":            &bintree{templatesUsLocationTmpl, map[string]*bintree{}},
			"moon_phase.tmpl":          &bintree{templatesUsMoon_phaseTmpl, map[string]*bintree{}},
			"tide.tmpl":                &bintree{templatesUsTideTmpl, map[string]*bintree{}},
			"trip.tmpl":                &bintree{templatesUsTripTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
